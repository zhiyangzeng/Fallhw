#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\headheight 0in
\headsep 0in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align center

\series bold
\size large
CSCE 221 Cover Page
\series default
\size default

\begin_inset Newline newline
\end_inset

 Homework Assignment #2
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

(Apologize in advance, I screwed up the format of this LyX document and
 don't know how to fix back, question 3~9 is displayed as question 1~7)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
First Name
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Zhiyang
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Last Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Zeng
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

UIN
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

720005338
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
User Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

zhiyangzeng
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

E-mail address
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

zhiyangzeng@tamu.edu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more on Aggie Honor System Office website: 
\family typewriter

\begin_inset CommandInset href
LatexCommand href
target "http://aggiehonor.tamu.edu/"

\end_inset


\family default

\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="5">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stackexchange.com
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
google.com
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stackoverflow.com
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Printed material
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lecture slides
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
I certify that I have listed all the sources that I used to develop the
 solutions/codes in the submitted work.
\end_layout

\begin_layout Standard
\noindent

\emph on
On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="6">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Zhiyang
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Zeng
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10/15/15
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Newpage newpage
\end_inset


\series bold
Homework 2
\end_layout

\begin_layout Standard
\align center

\series bold
due October 18 at 11:59 pm.
\end_layout

\begin_layout Enumerate
(20 points) Linked list questions.
\end_layout

\begin_deeper
\begin_layout Enumerate
Write a recursive function in C++ that counts the number of nodes in a singly
 linked list.
 
\end_layout

\begin_layout Standard
int size (ListNode head, ListNode trail) { 
\begin_inset Newline newline
\end_inset

if (head==trail){
\end_layout

\begin_layout Standard
return 0;
\end_layout

\begin_layout Standard
} else {
\end_layout

\begin_layout Standard
return 1+ size (head->next, trail);
\end_layout

\begin_layout Standard
}}
\end_layout

\begin_layout Enumerate
Write a recurrence relation that represents the running time for your algorithm.
 
\end_layout

\begin_layout Standard
T(n)=1+T(n-1)
\end_layout

\begin_layout Standard
T(0)=0
\end_layout

\begin_layout Enumerate
Solve this relation and provide the classification of the algorithm using
 the Big-O asymptotic notation.
\end_layout

\begin_layout Standard
T(k)=k+ T(n-k), kmax=n
\end_layout

\begin_layout Standard
T(n)=n+T(0)= n+0
\end_layout

\begin_layout Standard
Recurrence relation is n
\end_layout

\begin_layout Standard
O(n)
\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(20 points) Write a recursive function that finds the maximum value in an
 array of int values without using any loops.
 
\end_layout

\begin_deeper
\begin_layout Standard
int findMax (int[] arr, index i) { 
\end_layout

\begin_layout Standard
if (i>0) {
\end_layout

\begin_layout Standard
return max.(arr[i], findMax(arr, i-1); }
\end_layout

\begin_layout Standard
else {
\end_layout

\begin_layout Standard
return arr[0];
\end_layout

\begin_layout Standard
} }
\end_layout

\begin_layout Standard
b) Write a recurrence relation that represents running time of your algorithm.
 
\end_layout

\begin_layout Standard
T(n)=T(n-1)+1
\end_layout

\begin_layout Standard
T(0)=1
\end_layout

\begin_layout Standard
c) Solve this relation and classify the algorithm using the Big-O asymptotic
 notation.
\end_layout

\begin_layout Standard
Recurrence relation is n+1
\end_layout

\begin_layout Standard
O(n)
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Enumerate
(10 points) What data structure is the most suitable to determine if a string
 is a palindrome? A string is a palindrome if it is equal to its reverse.
 For example, 
\begin_inset Quotes eld
\end_inset

racecar
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

so many dynamos
\begin_inset Quotes erd
\end_inset

 are palindromes (spaces are removed from many word strings).
 Justify your answer.
 Use Big-O notation to classify the running time of your algorithm.
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Stack is the most suitable structure.
 The best way is to push individual characters of string s1 into the stack,
 then pop the stack and sequentially store the top elements into an empty
 string (char array) s2 until the stack is empty.
 This procedure will make s2 a reverse string of s1.
 The string is a palindrome if s1==s2.
 The running time is F(n) = 3n, with the push(), top() and store, and pop()
 operations each costing n operations.
 The big-O is O(n)
\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(10 points) Solve C-5.2 on p.
 224
\end_layout

\begin_deeper
\begin_layout Standard
int result=False;
\end_layout

\begin_layout Standard
while (!stack1.empty()){ //search stack
\end_layout

\begin_layout Standard
queue1.enqueue(stack1.top());
\end_layout

\begin_layout Standard
if (stack1.top()==element_to_search) result=True; //check whether element
 is in stack
\end_layout

\begin_layout Standard
stack1.pop();}
\end_layout

\begin_layout Standard
while(!queue1.empty(){ //push element back to stack, resulting in reverse
 stack
\end_layout

\begin_layout Standard
stack1.push(queue1.front());
\end_layout

\begin_layout Standard
queue1.deque();
\end_layout

\begin_layout Standard
}
\end_layout

\begin_layout Standard
while (!stack1.empty()){ //repeat the procedure to reverse stack
\end_layout

\begin_layout Standard
queue1.enqueue(stack1.top());
\end_layout

\begin_layout Standard
stack1.pop();}
\end_layout

\begin_layout Standard
while(!queue1.empty(){ 
\end_layout

\begin_layout Standard
stack1.push(queue1.front());
\end_layout

\begin_layout Standard
queue1.deque();
\end_layout

\begin_layout Standard
}//result is original stack and empty queue
\begin_inset Newline newline
\end_inset

//return the result
\begin_inset Newline newline
\end_inset

return result;
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
The above algorithm will push element into a queue while searching for elements.
 Then push the queue elements back to the stack for a reverse stack.
 Empty the stack into queue and empty queue into the stack again for the
 original stack order and an empty queue.
\begin_inset VSpace vfill
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(20 points) What is the amortized cost of the stack push operation when
 the additional stack-array memory is allocated by each of these two strategies?
 Do calculations to support your answer.
\end_layout

\begin_deeper
\begin_layout Enumerate
Doubling strategy -- double the size of the stack-array memory if more memory
 is needed.
\begin_inset VSpace smallskip
\end_inset


\begin_inset Newline newline
\end_inset

For doubling, the total cost will be 1+2+4+8+...
\begin_inset Formula $2^{i}$
\end_inset

 for a 
\begin_inset Formula $2^{i}$
\end_inset

just smaller than n (
\begin_inset Formula $2^{i+1}$
\end_inset

will be greater than n).
 
\begin_inset Newline newline
\end_inset


\begin_inset Formula $T(n)=1+2+4+8+...2^{i}=2^{i}-1$
\end_inset

, i
\begin_inset Formula $_{max}$
\end_inset

=
\begin_inset Formula $\lfloor log_{2}n\rfloor$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $T(n)=2^{\lfloor log_{2}n\rfloor}$
\end_inset

-1
\begin_inset Formula $\approx2n-1$
\end_inset

 , which is 
\begin_inset Formula $O(n)$
\end_inset


\begin_inset Newline newline
\end_inset

cost per element is 
\begin_inset Formula $T(n)/n$
\end_inset

.
 
\begin_inset Formula $O(n)/n$
\end_inset

 is big-O of 
\begin_inset Formula $O(1).$
\end_inset

 Therefore amortized cost for push with doubling is constant.
 
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Enumerate
Incremental strategy -- increase the size of the stack-array by a positive
 constant 
\begin_inset Formula $c$
\end_inset

 if more memory is needed.
\begin_inset VSpace smallskip
\end_inset


\begin_inset Newline newline
\end_inset

For increasing by constant c.
 The total cost will be
\begin_inset Newline newline
\end_inset


\begin_inset Formula $T(n)=$
\end_inset


\begin_inset Formula $c+2c+3c+4c+...+\frac{n}{c}*c$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $=c*(1+2+3+4+...\frac{n}{c})=\frac{(n^{2}/c)+n}{2}$
\end_inset

, which is 
\begin_inset Formula $O(n^{2})$
\end_inset


\begin_inset Newline newline
\end_inset

cost per element is T(n)/n.
 
\begin_inset Formula $O(n^{2})/n$
\end_inset

is big-O of 
\begin_inset Formula $O(n).$
\end_inset

 
\begin_inset VSpace vfill
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(10 points) Describe (in pseudo code) how to implement the stack ADT using
 two queues.
 What is the running time of the push and pop functions in this implementation?
\end_layout

\begin_deeper
\begin_layout Standard
push: enqueue into queue1.
 Running time is constant.
 O(1)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
pop: while(queue1.size()>1){
\end_layout

\begin_layout Standard
queue2.enqueue(queue1.front()); //move elements of queue1 into queue2 until
 the last element left
\end_layout

\begin_layout Standard
}
\end_layout

\begin_layout Standard
queue1.dequeue();
\end_layout

\begin_layout Standard
while (!queue2.empty()){
\end_layout

\begin_layout Standard
queue1.enqueue(queue2.front()); //move elements of queue2 back to queue1,
 leaving queue1 with last element removed and queue2 empty
\end_layout

\begin_layout Standard
}
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
Pop operation is 
\begin_inset Formula $F(n)=(n-1)*1+1+(n-1)*1=2n-1.$
\end_inset

 It is O(n) 
\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(10 points) Solve C-5.8 on p.
 224
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Using stack can solve this problem.
 First use a function to sequencially push the numbers and operators into
 the stack, the first number being pushed first into the bottom.
 If an operator is detected, the top 2 element in the stack will be poped
 and they will do the operation with that operator.
 For example 5 2 + will result in 5 and 2 being pushed into the stack.
 A 
\begin_inset Quotes eld
\end_inset

+
\begin_inset Quotes erd
\end_inset

 is detected, so 2 and 5 will be extracted to perform operation 5+2.
 
\begin_inset VSpace vfill
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(20 points) Consider the quick sort algorithm.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Provide an example of the inputs and the values of the pivot point for the
 best, worst and average cases for the quick sort.
\begin_inset VSpace smallskip
\end_inset


\begin_inset Newline newline
\end_inset

Best case: happens on random data.
 Pivot is the median of all data, leaving a left and right partition that's
 equal or almost equal.
\begin_inset Newline newline
\end_inset

Average case: happens when pivot points at a value and will create partitions
 of size 
\begin_inset Formula $\alpha n$
\end_inset

 and 
\begin_inset Formula $(1-\alpha)n$
\end_inset

 where
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\frac{1}{n}<\alpha<0.5$
\end_inset

 so that none of the partition is of size 1 or an extremely small number.
\begin_inset Newline newline
\end_inset

Both of the best case and average case for quick sort is 
\begin_inset Formula $O(nlogn)$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Worst case: happens on perfectly sorted data.
 Pivot points at the largest element of the partition for each of the n
 iteration.

\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Enumerate
Write a recursive relation for running time function and its solution for
 each case.
\begin_inset Newline newline
\end_inset

Best case: 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $T(n)=2T(n/2)+n$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
.
 
\begin_inset Formula $T(0)=0$
\end_inset

 It is 
\begin_inset Formula $O(nlogn)$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Average case: 
\begin_inset Formula $T(n)=T(\alpha n)+T((1-\alpha)n)+n$
\end_inset

, 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $T(0)=0$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
.
\begin_inset Formula $\frac{1}{n}<\alpha<0.5$
\end_inset

 so that it will not have a partition
\begin_inset Formula $T(1)$
\end_inset


\begin_inset Newline newline
\end_inset

Average case solution is 
\begin_inset Formula $O(nlogn)$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Worst case: 
\begin_inset Formula $T(n)=T(n-1)+T(1)+n$
\end_inset

.
 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $T(0)=0$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Newline newline
\end_inset

Solution is 
\begin_inset Formula $n+(n-1)+(n-2)+..1=n(n+1)/2$
\end_inset

, which is 
\begin_inset Formula $O(n^{2})$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
(15 points) Consider the merge sort algorithm.
\end_layout

\begin_deeper
\begin_layout Enumerate
Write a recurrence relation for running time function for the merge sort.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula $T(n)=2T(n/2)+n$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $T(0)=0$
\end_inset


\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Use two methods to solve the recurrence relation.
\end_layout

\begin_deeper
\begin_layout Enumerate
Master Theorem
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Formula $T(n)=aT(n/b)+n^{c}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $log_{b}a=log_{2}2=1=c$
\end_inset


\begin_inset Newline newline
\end_inset

Therefore 
\begin_inset Formula $T(n)=\text{Θ}(nlog_{2}n)$
\end_inset


\begin_inset Newline newline
\end_inset

Big-O is 
\begin_inset Formula $O(nlogn)$
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Iterating method
\begin_inset Newline newline
\end_inset


\begin_inset Formula $T(n)=2T(n/2)+n$
\end_inset


\begin_inset Newline newline
\end_inset

= 
\begin_inset Formula $2*2T(n/4)+2*(n/2)+n=4T(n/4)+n+n$
\end_inset


\begin_inset Newline newline
\end_inset

=
\begin_inset Formula $4*2T(n/8)+4*(n/4)+n+n=8T(n/8)+n+n+n$
\end_inset


\begin_inset Newline newline
\end_inset

=
\begin_inset Formula $2^{k}T(n/2^{k})+kn$
\end_inset

.
 kmax=
\begin_inset Formula $log_{2}n$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $T(n)=2^{log_{2}n}*T(n/2^{log_{2}n})+n*log_{2}n$
\end_inset


\begin_inset Newline newline
\end_inset

=
\begin_inset Formula $n*T(1)+n*log_{2}n=n(1+log_{2}n)$
\end_inset


\begin_inset Newline newline
\end_inset

Big-O is 
\begin_inset Formula $O(nlogn)$
\end_inset


\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
What is the best, worst and average running time of the merge sort algorithm?
 Justify your answer.
 
\begin_inset VSpace defskip
\end_inset


\begin_inset Newline newline
\end_inset

The best, worst and average case running time for merge sort are the same
 at 
\begin_inset Formula $O(nlogn)$
\end_inset

.
 The divide part of the algorithm is the same regardless of the order of
 the list; dividing the list in half always runs at 
\begin_inset Formula $O(log_{2}n).$
\end_inset

 The 
\begin_inset Quotes eld
\end_inset

conquer
\begin_inset Quotes erd
\end_inset

 part where 2 lists of size n merging together will always run at 
\begin_inset Formula $2n-1$
\end_inset

 comparisons regardless of the ordering.
 Therefore the best, worst, and average case running time are the same.
 
\begin_inset VSpace vfill
\end_inset


\end_layout

\end_deeper
\end_body
\end_document
