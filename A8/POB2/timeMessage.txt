import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.*;
import java.util.*;

public class timeMessage extends Thread{
/*
private int interval;
private static AtomicInteger counter;
public timeMessage(AtomicInteger c, int interval){
	this.counter=c;
	this.interval=interval;
}*/
//public boolean stopinc;
public int temp;
public timeMessage(int temp){
	this.temp=temp;
}

public void run() {
	synchronized (this){
	try {
		if (temp>0 && temp%7==0){
		System.out.println("7 second message");
	}
		notify();
		//stopinc=false;
		
	} catch (Exception e) {
             // A sleeping thread may be interrupted to be terminated, 
             // which raises an exception		
             return; // end this thread
	}}

}}
